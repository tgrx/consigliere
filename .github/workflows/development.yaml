name: Development

on:
#  pull_request:
  workflow_dispatch:

env:
  PIPENV_VENV_IN_PROJECT: "1"

jobs:
  qa:
    strategy:
      matrix:
        os:
          - "macos-latest"
          - "ubuntu-latest"
          - "windows-latest"
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"

    runs-on: ${{ matrix.os }}

    steps:

      - name: pull code from repo
        uses: actions/checkout@v2

      - name: set up runtime
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'

      - name: cache runtime
        id: cache-runtime
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: cache-runtime-${{ matrix.os }}-${{ env.pythonLocation }}-${{ hashFiles('Pipfile.lock') }}-dev

      - name: install pipenv
        if: ${{ !steps.cache-runtime.outputs.cache-hit }}
        run: pip install pipenv

      - name: install python packages
        if: ${{ !steps.cache-runtime.outputs.cache-hit }}
        run: make venv-deploy-all

      - name: run full qa
        run: make qa

      - name: upload coverage to codecov.io
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage.xml
          name: consigliere
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
